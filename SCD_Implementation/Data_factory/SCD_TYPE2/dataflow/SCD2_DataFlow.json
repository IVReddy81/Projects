{
	"name": "SCD2_DataFlow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "src1_EMP_DS",
						"type": "DatasetReference"
					},
					"name": "src1EMP"
				},
				{
					"dataset": {
						"referenceName": "src2_SCD2_DS",
						"type": "DatasetReference"
					},
					"name": "src2SCD2"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "src2_SCD2_DS",
						"type": "DatasetReference"
					},
					"name": "sinkNEWrows"
				},
				{
					"dataset": {
						"referenceName": "src2_SCD2_DS",
						"type": "DatasetReference"
					},
					"name": "sinkUpdateInsert"
				},
				{
					"dataset": {
						"referenceName": "src2_SCD2_DS",
						"type": "DatasetReference"
					},
					"name": "sinkUPDATEUPDATE"
				}
			],
			"transformations": [
				{
					"name": "lookup"
				},
				{
					"name": "derivedColumn"
				},
				{
					"name": "split"
				},
				{
					"name": "alterRowUPDATEIF"
				},
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          id as integer,",
				"          name as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'NONE',",
				"     format: 'table') ~> src1EMP",
				"source(output(",
				"          sur_key as integer,",
				"          tid as integer,",
				"          tname as string,",
				"          start_date as date,",
				"          end_date as date,",
				"          flag as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> src2SCD2",
				"src1EMP, src2SCD2 lookup(id == tid,",
				"     multiple: true,",
				"     broadcast: 'auto')~> lookup",
				"lookup derive(der_Start_Date = currentDate(),",
				"          der_End_Date = toDate('1900-01-01'),",
				"          der_flag_N = 'N',",
				"          der_flag_Y = 'Y') ~> derivedColumn",
				"derivedColumn split(isNull(tid),",
				"     id==tid && name!=tname,",
				"     disjoint: true) ~> split@(newRows, changedRows)",
				"derivedColumn1 alterRow(updateIf(id==tid && sur_key<old_sur_key)) ~> alterRowUPDATEIF",
				"split@changedRows derive(old_sur_key = sur_key) ~> derivedColumn1",
				"split@newRows sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          sur_key as integer,",
				"          tid as integer,",
				"          tname as string,",
				"          start_date as date,",
				"          end_date as date,",
				"          flag as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          tid = id,",
				"          tname = name,",
				"          start_date = der_Start_Date,",
				"          end_date = der_End_Date,",
				"          flag = der_flag_Y",
				"     )) ~> sinkNEWrows",
				"split@changedRows sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          sur_key as integer,",
				"          tid as integer,",
				"          tname as string,",
				"          start_date as date,",
				"          end_date as date,",
				"          flag as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          tid = id,",
				"          tname = name,",
				"          start_date = der_Start_Date,",
				"          end_date = der_End_Date,",
				"          flag = der_flag_Y",
				"     )) ~> sinkUpdateInsert",
				"alterRowUPDATEIF sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          sur_key as integer,",
				"          tid as integer,",
				"          tname as string,",
				"          start_date as date,",
				"          end_date as date,",
				"          flag as string",
				"     ),",
				"     deletable:false,",
				"     insertable:false,",
				"     updateable:true,",
				"     upsertable:false,",
				"     keys:['tid','sur_key'],",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          tid,",
				"          end_date = der_Start_Date,",
				"          flag = der_flag_N,",
				"          sur_key",
				"     )) ~> sinkUPDATEUPDATE"
			]
		}
	}
}